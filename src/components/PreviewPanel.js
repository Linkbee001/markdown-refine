'use client';

import React from 'react';

// SVG Icon for the outline toggle button
const OutlineIcon = ({ isOpen }) => (
	<svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
		{isOpen ? (
			<path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
		) : (
			<path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
		)}
	</svg>
);

export default function PreviewPanel({
	htmlResult,       // The stable HTML generated by AI or loaded
	tempHtmlResult,   // The temporary HTML used during style editing
	isEditorOpen,     // Flag to determine if style editor is open
	isLoading,        // Flag to show loading state
	previewIframeRef, // Ref for the iframe element
	isOutlineVisible, // Flag to show/hide the component outline sidebar
	onToggleOutline,  // Function to toggle the outline sidebar
}) {

	// Determine which HTML content to display in the iframe
	const iframeSrcDoc = isEditorOpen ? tempHtmlResult : htmlResult;

	return (
		<div className="flex-1 p-4 flex flex-col overflow-hidden border-l border-gray-200 items-center justify-center bg-gray-200 relative">
			<h2 className="text-lg font-semibold mb-2 text-gray-700 self-start sr-only">移动预览</h2>

			{/* 导航栏切换按钮 - Show only when there is content */}
			{htmlResult && (
				<button
					onClick={onToggleOutline}
					className="absolute left-4 top-4 z-20 bg-white p-2 rounded-md shadow hover:bg-gray-100 flex items-center justify-center"
					title={isOutlineVisible ? "隐藏组件导航" : "显示组件导航"}
					aria-label={isOutlineVisible ? "隐藏组件导航" : "显示组件导航"}
					aria-expanded={isOutlineVisible}
				>
					<OutlineIcon isOpen={isOutlineVisible} />
				</button>
			)}

			{/* 移动设备外壳 */}
			<div className="w-[375px] h-[750px] max-h-full border-4 border-gray-700 rounded-xl shadow-lg overflow-hidden bg-white relative">
				{htmlResult || tempHtmlResult ? ( // Show iframe if there is any HTML content (stable or temp)
					<iframe
						ref={previewIframeRef}
						srcDoc={iframeSrcDoc} // Use the determined srcDoc
						title="HTML Preview"
						className="w-full h-full border-0"
						sandbox="allow-scripts allow-same-origin" // Keep same-origin for potential script interactions if needed
					// Remove the onLoad handler here, as iframe updates are handled by useEffect in the hook
					/>
				) : (
					<div className="flex items-center justify-center h-full text-gray-500 p-4 text-center">
						{isLoading ? '生成预览中...' : '预览将在此处显示...'}
					</div>
				)}
			</div>
		</div>
	);
} 